@model IEnumerable<BerylCalendar.Models.Event>

@{
    ViewData["Title"] = "Home Page";
}
<div style="float:right;border-left:0;">
    <button id="eventOptionToggle" class="btn btn-info">Show</button>
    <br><br>
    <ul id="displayOptions">
        <li>
            <p id="displayColorToggle">Enable Colors</p>
        </li>
    </ul>
</div>

<div class="container">
    @{ DateTime today = DateTime.Today; }
    <div class="row">
        <div>
           @using (Html.BeginForm("Display", "Event"))
            {
                <div class="input-group mb-3 ">
                    <input type="text" name="filter" class="form-control" />
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    <small id="searchExample" class="form-text text-muted">
                        You may search between two different dates or an event type. Event types are: Shopping, Visit, Meal, and Activity. Example of a search between dates: 1/1/2021 5/1/2021.
                    </small>
                </div>
            }
        </div>
        <div class="list-group">
           @if (Model != null)
            {
                DateTime endOfPriorEvent = new DateTime(2020, 1, 1, 0, 0, 0);
                foreach (var item in Model)
                {
                    if ((item.StartDateTime.Day == today.Day) && (item.StartDateTime.Month == today.Month)
                        && (item.StartDateTime.Year == today.Year))
                    {
                        if (item.StartDateTime < endOfPriorEvent)
                        {
                            <a href="#" class="list-group-item list-group-item-action" aria-current="true">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">Warning</h5>
                                </div>
                                <p class="mb-1">Last event ends before next event begins. </p>
                            </a>
                        }
                        <a href="/DetailedEvent/SeeDetailedEvents/@item.Id" class="list-group-item list-group-item-action event" aria-current="true">
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">@Html.DisplayFor(modelItem => item.Title)</h5>
                                <small>@Html.DisplayFor(modelItem => item.StartDateTime)</small>
                            </div>
                            <div class="d-flex w-100 justify-content-between">
                                <p class="mb-1">@Html.DisplayFor(modelItem => item.Location)</p>
                                <small class="eventType">@Html.DisplayFor(modelItem => item.Type.Name)</small>
                            </div>
                        </a>
                    }
                    else
                    {
                        <p>The are no events for the current day.</p>
                    }
                }
            }
            else
            {
                <p>You have no saved events.</p>
            }
        </div>
        <div class="col-md-4">
            <div class="month">
                <ul>
                    <li class="prev"><a href="#">&#10094</a></li>
                    <li class="next"><a href="#">&#10095</a></li>
                    <li class="monthName">@today.ToString("MMMM")</li>
                </ul>
            </div>
            <div class="weekdays">
                <li>Sun</li>
                <li>Mon</li>
                <li>Tues</li>
                <li>Wed</li>
                <li>Thur</li>
                <li>Fri</li>
                <li>Sat</li>
            </div>
            <div class="days">
                <ul>
                    @{
                        DateTime firstDayOfMonth = new DateTime(today.Year, today.Month, 1);
                        int firstDayCodeOfMonth = (int)firstDayOfMonth.DayOfWeek;
                        for (int i = 0; i < 42; i++)
                        {
                            if ((i >= firstDayCodeOfMonth)
                                && (i <= (DateTime.DaysInMonth(today.Year, today.Month) + firstDayCodeOfMonth)))
                            {
                                <li><a href="#">@i - firstDayCodeOfMonth + 1;</a></li>
                            }
                            else
                            {
                                <li></li>
                            }
                        }
                    }
                </ul>
            </div>
        </div>
    </div> 
</div>

@section Scripts {
   @if (ViewData["status"] != null)
    {
        <script language="javascript">
            alert("You did not enter two dates or a type. Example: 1/1/2021 4/24/2021 or Shopping.");
        </script>
    }
}